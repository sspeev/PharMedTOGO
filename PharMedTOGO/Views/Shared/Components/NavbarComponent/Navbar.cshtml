@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<nav class="insightNavbar">
    <a class="item" asp-controller="Home" asp-action="Index">Home</a>
    <a class="item" asp-controller="Home" asp-action="Privacy">About</a>
    <div class="item">
        Front-End
        <div class="dropdown">
            <div>
                <a>React</a>
                <a>Angular</a>
                <a>Vue</a>
            </div>
        </div>
    </div>
    <a class="item">Contact</a>
    <div class="item">
        Back-End
        <div class="dropdown">
            <div>
                <a>ASP.NET CORE</a>
                <a>Enity Framework</a>
                <a>Docker</a>
            </div>
        </div>
    </div>
    @if (SignInManager.IsSignedIn(User))
    {
        <a class="item" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name!</a>
        <form class="item form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button type="submit" class="nav-link btn btn-link text-white">Logout</button>
        </form>
    }
    else
    {
        <a class="item" asp-area="Identity" asp-page="/Account/Register">Register</a>
        <a class="item" asp-area="Identity" asp-page="/Account/Login">Login</a>
    }
    <div class="underline"></div>
</nav>