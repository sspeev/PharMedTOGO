@model AllMedicinesQueryModel

<div class="ltn__breadcrumb-area text-left bg-overlay-white-30 bg-image"
     data-bs-bg="https://img.freepik.com/free-photo/colorful-pills-with-white-container_23-2148506763.jpg"
     style="background-image: url(https://img.freepik.com/free-photo/colorful-pills-with-white-container_23-2148506763.jpg)">
</div>

@await Component.InvokeAsync(nameof(MobileMenuComponent))
<form method="get" style="display: flex; justify-content: center">
    <div class="d-flex flex-row gap-lg-3">
        <div class="d-flex justify-content-center flex-column">
            <label asp-for="SearchTerm"></label>
            <input asp-for="SearchTerm" class="form-control" placeholder="...">
        </div>
        <div class="form-group col-md-3 d-flex justify-content-center flex-column">
            <div class="form-group">
                <label asp-for="Sorting"></label>
                <select asp-for="Sorting" class="form-control">
                    <option value="0">Newest</option>
                    <option value="1">Lowest price first</option>
                    <option value="2">General</option>
                    <option value="3">Cosmetics</option>
                    <option value="4">Food Additives</option>
                    <option value="5">Homeophatic</option>
                    <option value="6">Antibiotics</option>
                </select>
            </div>
        </div>
        <div class="form-group d-flex justify-content-center flex-column">
            <button type="submit" class="theme-btn-1 btn btn-effect-1">Search</button>
        </div>
    </div>
</form>
@{
    var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }
    var maxPage = Math.Ceiling((double)Model.MedicinesCount / Model.MedicinesPerPage);
}
<div class="mb-4 mt-4 d-flex justify-content-between" style="padding: 3em 5em;">
    <div class="">
        <a class="theme-btn-1 btn btn-effect-1 @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
           asp-controller="Medicine"
           asp-action="All"
           asp-route-currentPage="@previousPage"
           asp-route-searchTerm="@Model.SearchTerm"
           asp-route-sorting="@((int)Model.Sorting)">
            <<
        </a>
    </div>

    @{
        var shouldButtonBeDisabled = Model.CurrentPage == maxPage || !Model.Medicines.Any();
    }
    <div class="">
        <a class="theme-btn-1 btn btn-effect-1 @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
           asp-controller="Medicine"
           asp-action="All"
           asp-route-currentPage="@(Model.CurrentPage + 1)"
           asp-route-searchTerm="@Model.SearchTerm"
           asp-route-sorting="@((int)Model.Sorting)">
            >>
        </a>
    </div>
</div>
@if (!Model.Medicines.Any())
{
    <h2 class="text-center">No medicines found by the given criteria!</h2>
}
<div class="d-flex gap-2 m-3 flex-wrap justify-content-center">
    @foreach (var medicine in Model.Medicines)
    {
        <partial name="_MedicinePartial" model="@medicine" />
    }
</div>
